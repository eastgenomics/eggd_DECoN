#!/bin/bash
# DECoN_dev 0.0.1
# Generated by dx-app-wizard.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.

# Exit at any point if there is any error and output each line as it is executed (for debugging)
# set -e -x -o pipefail

main() {

    ## Confirm that inputs are read in appropriately:
    echo "Input folder of bams: '$input_folder'"
    echo "Make custom_report: '$custom_report'"
    echo "Output prefix: '$prefix'"
    echo "Minimum correlation: '$min_corr'"
    echo "Minimum coverage: '$min_cov'x"
    echo "Transition probability: '$trans_prob'"
    # To recover the original filenames, you can use the output of 
    # "dx describe "$variable" --name"

    ## Build the DECoN tool from the tar provided
    # mkdir decon
    tar -xzf DECoN.tar.gz # will unpack into /home/dnanexus
    bash setup.sh
    echo "DECoN install finished with output:"
    tail -5 setup.log

    ## Download input files as provided or their defaults
    if [ -n "$target_bed" ]   # target.bed
    then
        dx download "$target_bed" -o target.bed
    else # download the default #003_Cancer project
        dx download project-Fkp9vjj4YFK078JQ4pyb5Qy0:file-Fv2gVXj4YFKBF0v26f0G8vpP -o target.bed
    fi

    if [ -n "$ref_gen" ]      # ref_gen.fa.gz
    then
        dx download "$ref_gen" -o ref_gen.fa.gz
    else # download the default #AWS Germany ref genome files
        dx download project-F3zxk7Q4F30Xp8fG69K1Vppj:file-F403K904F30y2vpVFqxB9kz7 -o ref_gen.fa.gz
    fi # unzip the gzipped FASTA file
    gunzip ref_gen.fa.gz # surprisingly takes forever

    ## Download all input bam and bai files
    dx download --all "$DX_PROJECT_CONTEXT_ID":/"$input_folder"/*.bam
    # generate sample list of a folder provided
    ls *.bam > bam_list.txt

    dx download --all "$DX_PROJECT_CONTEXT_ID":/"$input_folder"/*.bai
    # Rename .bam.bai files to .bai
    for f in *.bam.bai; do 
        mv -- "$f" "${f%.bam.bai}.bai"
    done
    echo "All input files have been downloaded"

    ## Run DECoN tool on samples
    # 1. Run ReadInBams:
    # takes bam_list, target_bed, ref_gen and a prefix="bambi"
    Rscript ReadInBams.R --bams bam_list.txt --bed target.bed --fasta ref_gen.fa --out bambi
    # outputs *bambi.RData*

    # 2. Run IdentifyFailures:
    # takes the bambi.RData generated in the previous step, min_corr, min_cov, exon_num, cust_rep, prefix (input)
    # outputs prefix_Failures.txt

    # 3. Run makeCNVcalls:
    # takes the bambi.RData generated in the previous step, trans_prob, exon_num, cust_rep, prefix (input), plot_sel="Custom", default plot folder name "DECoNPlots"
    # outputs a prefix.RData, prefix_all.txt, plots in the DECoNPlots folder

    if [ $custom_report == "true" ]
    then # if custom reporting is selected
        if [ -n "$exon_num_tsv" ]
        then #exon_num.tsv
            echo "Custom exon numbering tsv provided"

            dx download "$exon_num_tsv" -o exon_num.tsv
            
            Rscript IdentifyFailures.R --Rdata bambi.RData --mincorr $min_corr --mincov $min_cov --exons exon_num.tsv --custom $custom_report --out $prefix

            Rscript makeCNVcalls.R --Rdata bambi.RData --transProb $trans_prob --exons $exon_num --custom $custom_report --out $prefix --plot Custom --plotFolder DECoNPlots
        else
            echo "No custom exon numbering tsv provided"
            custom_report="false"
        fi
    else # custom_report false or not selected
        echo "No custom reporting selected"
        Rscript IdentifyFailures.R --Rdata bambi.RData --mincorr $min_corr --mincov $min_cov --out $prefix

        Rscript makeCNVcalls.R --Rdata bambi.RData --transProb $trans_prob --out $prefix --plot All --plotFolder DECoNPlots
    fi
    cp bambi.RData $prefix"_summary.RData"
    echo "All scripts finished successfully, collecting output files to be uploaded to dx"

    ## Create outdir and move result files in to be uploaded
    outdir=out/result_files && mkdir -p ${outdir}
    mv "$prefix"* ${outdir}/
    plot_dir=out/plots && mkdir -p ${plot_dir}
    # touch DECoNPlots/noFiles.txt
    mv DECoNPlots ${plot_dir}/
    
    # Upload results
    dx-upload-all-outputs
}
